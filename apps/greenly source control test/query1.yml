id: query1
type: datasource
subtype: JavascriptQuery
resourceName: JavascriptQuery
template:
  ordered:
    - queryRefreshTime: ''
    - allowedGroupIds: []
    - streamResponse: false
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - runWhenModelUpdates: false
    - workflowRunId: null
    - showFailureToaster: true
    - query: |-
        const translations = {
          NEWupsellCta:{
    en:'Book a demo',
    fr: 'Prenez rendez vous',
    },
          upsellCta:{
            en:'Book a demo',
            fr: 'Prenez rendez vous',
            },
          yourLcaJourney:{
            en:'Your LCA journey',
            fr:'Votre parcours ACV'
          },
          goToLcaApp:{
            en:'Go to LCA app',
            fr:`Ouvrir l'application ACV`
          },
          selectLcaProductDescription:{
            en:'Select your LCA and open the LCA app to download your report.',
            fr:`Sélectionnez votre ACV et ouvrez l'application ACV pour télécharger votre rapport.`
          },
          availableOptions:{
            en:'Options',
            fr:'Options',
          },
          selectYourlca:{
            en: 'Select your LCA',
            fr: 'Sélectionnez votre ACV',
          },
          unexpectedError:{
            en:'Unexpected error',
            fr: 'Erreur de chargement',
          }}

        return translations
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - privateParams: []
    - workflowBlockUuid: null
    - runWhenPageLoadsDelay: ''
    - data: null
    - importedQueryInputs:
        ordered: []
    - _additionalScope: []
    - isImported: false
    - showSuccessToaster: false
    - cacheKeyTtl: ''
    - requestSentTimestamp: null
    - metadata: null
    - workflowActionType: null
    - queryRunTime: null
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - queryTriggerDelay: '0'
    - resourceTypeOverride: null
    - watchedParams: []
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - showUpdateSetValueDynamicallyToggle: true
    - overrideOrgCacheForUserCache: false
    - runWhenPageLoads: false
    - transformer: |-
        // Query results are available as the `data` variable
        return data
    - events: []
    - queryTimeout: '10000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - enableCaching: false
    - allowedGroups: []
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: 4.5
createdAt: 2024-03-21T17:30:53.295Z
