id: updatespecificCellsA1Notation
type: datasource
subtype: GoogleSheetsQuery
resourceName: 24806adf-48cb-4ebb-ac8a-bf40f803c588
template:
  ordered:
    - queryRefreshTime: ''
    - allowedGroupIds: []
    - streamResponse: false
    - lastReceivedFromResourceAt: null
    - queryDisabledMessage: ''
    - servedFromCache: false
    - offlineUserQueryInputs: ''
    - successMessage: ''
    - queryDisabled: ''
    - useSheetRange: true
    - playgroundQuerySaveId: latest
    - workflowParams: null
    - resourceNameOverride: ''
    - useRawSpreadsheetId: false
    - runWhenModelUpdates: false
    - workflowRunId: null
    - showFailureToaster: true
    - spreadsheetId: 16jk-dRC-iwmspkF2y7Mw2Ow5c-GT4Cg2nzBrHcPFD_E
    - query: ''
    - playgroundQueryUuid: ''
    - playgroundQueryId: null
    - error: null
    - workflowRunBodyType: raw
    - sheetUpdate: '["testing again"]'
    - privateParams: []
    - workflowBlockUuid: null
    - sheetIdToCopy: ''
    - sheetName: ''
    - runWhenPageLoadsDelay: ''
    - doNotThrowOnDeleteNoOp: false
    - data: null
    - importedQueryInputs:
        ordered: []
    - isImported: false
    - showSuccessToaster: true
    - cacheKeyTtl: ''
    - filterBy: '[{"key":"ID","value":"{{table1.changesetArray[0].ID}}","operation":"="}]'
    - requestSentTimestamp: null
    - metadata: null
    - workflowActionType: null
    - queryRunTime: null
    - actionType: update
    - changesetObject: ''
    - errorTransformer: >-
        // The variable 'data' allows you to reference the request's data in the
        transformer. 

        // example: return data.find(element => element.isError)

        return data.error
    - finished: null
    - confirmationMessage: null
    - isFetching: false
    - changeset: ''
    - rawData: null
    - offset: ''
    - queryTriggerDelay: '0'
    - resourceTypeOverride: ''
    - watchedParams: []
    - bulkUpdateRows: '{{table1.changesetArray}}'
    - enableErrorTransformer: false
    - showLatestVersionUpdatedWarning: false
    - useRawCopyToSpreadsheetId: false
    - timestamp: 0
    - importedQueryDefaults:
        ordered: []
    - enableTransformer: false
    - valueFormatting: formatted
    - showUpdateSetValueDynamicallyToggle: true
    - copyToSpreadsheetId: ''
    - overrideOrgCacheForUserCache: false
    - bulkUpdatePrimaryKey: ID
    - runWhenPageLoads: false
    - sheetTitle: ''
    - transformer: >-
        // type your code here

        // example: return formatDataAsArray(data).filter(row => row.quantity >
        20)

        return data
    - events:
        - ordered:
            - event: success
            - type: datasource
            - method: trigger
            - pluginId: fetchSheetData
            - targetId: null
            - params:
                ordered: []
            - waitType: debounce
            - waitMs: '0'
    - isMultiplayerEdited: false
    - queryTimeout: '10000'
    - workflowId: null
    - requireConfirmation: false
    - queryFailureConditions: ''
    - changesetIsObject: false
    - limit: ''
    - enableCaching: false
    - allowedGroups: []
    - workflowBlockPluginId: null
    - sheetRange: b8
    - offlineQueryType: None
    - queryThrottleTime: '750'
    - updateSetValueDynamically: false
    - notificationDuration: ''
createdAt: 2023-11-02T16:28:01.054Z
